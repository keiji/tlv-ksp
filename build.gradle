import io.gitlab.arturbosch.detekt.Detekt
import io.gitlab.arturbosch.detekt.report.ReportMergeTask

// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
    id 'com.android.application' version '8.3.0' apply false
    id 'com.android.library' version '8.3.0' apply false
    id 'org.jetbrains.kotlin.android' version '1.9.23' apply false
    id 'org.jetbrains.kotlin.jvm' version '1.9.23' apply false
    id("io.gitlab.arturbosch.detekt") version "1.23.6"
}

Properties sonaTypeProps = new Properties()
File sonatypePropertiesFile = project.rootProject.file("sonatype.properties")
if (sonatypePropertiesFile.exists()) {
    sonaTypeProps.load(sonatypePropertiesFile.newDataInputStream())
}

ext {
    groupId = 'dev.keiji.tlv'
    versionCode = '0.3.3'
//    versionCode = '0.3.3-SNAPSHOT'

    sonatypeUsername = sonaTypeProps.get('sonatypeUsername') ?: ""
    sonatypePassword = sonaTypeProps.get('sonatypePassword') ?: ""

    def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
    def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
    repoUrl = versionCode.endsWith('-SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
}

tasks.register('reportMerge', ReportMergeTask) {
    output = layout.buildDirectory.file("reports/detekt/detekt.xml")
}

subprojects {
    apply plugin: 'io.gitlab.arturbosch.detekt'

    detekt {
        buildUponDefaultConfig = true
        allRules = true
        config.setFrom("$rootDir/config/detekt/detekt.yml")
        parallel = true
    }

    afterEvaluate { project ->
        project.tasks.withType(Detekt) {
            finalizedBy reportMerge
        }
    }
}

tasks.register('clean', Delete) {
    delete rootProject.buildDir
}
